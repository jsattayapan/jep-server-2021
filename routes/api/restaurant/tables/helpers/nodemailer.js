const nodemailer = require('nodemailer');
const moment = require('moment');
const numeral = require('numeral');

async function emailDailyShifts({
  number_of_guest,
  total_table,
  total_amount,
  total_cash,
  total_card,
  room,
  total_discount,
  totalQuantityCancel,
  total_refund,
    total_transfer,
    morning_cash,
 afternoon_cash,
morning_card,
    afternoon_card,
morning_transfer,
 afternoon_transfer,
    cancelOrders,
    tablesSummary,
    detailOfDay,
    ThaiChanaSumA,
    ThaiChanaSumM,
    GWalletSumA,
    GWalletSumM,
    halfHalfSumA,
    halfHalfSumM,
    total_service_charge
}){

  var output = `
  <h3>Daily Report ‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏à‡∏µ‡πä‡∏¢‡∏ö</h3>
  <p><b>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: </b>${detailOfDay}</p>
  <br />
  <p><b>‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ (‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î): </b>${numeral(total_amount).format('0,0')} ‡∏ö‡∏≤‡∏ó</p>
  <p><b>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: </b>${numeral(number_of_guest).format('0,0')} ‡∏Ñ‡∏ô</p>
  <p><b>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏ï‡πä‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î: </b>${numeral(total_table).format('0,0')} ‡πÇ‡∏ï‡πä‡∏∞</p>
  <p><b>‡∏à‡πà‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î: </b>${numeral(total_cash).format('0,0')} ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏ä‡πâ‡∏≤: ${numeral(morning_cash).format('0,0')} ‡∏ö‡∏≤‡∏ó) (‡πÄ‡∏¢‡πá‡∏ô: ${numeral(afternoon_cash).format('0,0')} ‡∏ö‡∏≤‡∏ó)</p>
  <p><b>Service Charge: </b>${numeral(total_service_charge).format('0,0')} ‡∏ö‡∏≤‡∏ó</p>
  <p><b>‡∏à‡πà‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡∏ö‡∏±‡∏ï‡∏£: </b>${numeral(total_card).format('0,0')} ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏ä‡πâ‡∏≤: ${numeral(morning_card).format('0,0')} ‡∏ö‡∏≤‡∏ó) (‡πÄ‡∏¢‡πá‡∏ô: ${numeral(afternoon_card).format('0,0')} ‡∏ö‡∏≤‡∏ó)</p>
<p><b>‡∏à‡πà‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: </b>${numeral(total_transfer).format('0,0')} ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏ä‡πâ‡∏≤: ${numeral(morning_transfer).format('0,0')} ‡∏ö‡∏≤‡∏ó) (‡πÄ‡∏¢‡πá‡∏ô: ${numeral(afternoon_transfer).format('0,0')} ‡∏ö‡∏≤‡∏ó)</p>

<p><b>‡∏à‡πà‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡∏Ñ‡∏ô‡∏•‡∏∞‡∏Ñ‡∏£‡∏∂‡πà‡∏á: </b>${numeral(halfHalfSumM+halfHalfSumA).format('0,0')} ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏ä‡πâ‡∏≤: ${numeral(halfHalfSumM).format('0,0')} ‡∏ö‡∏≤‡∏ó) (‡πÄ‡∏¢‡πá‡∏ô: ${numeral(halfHalfSumA).format('0,0')} ‡∏ö‡∏≤‡∏ó)</p>
<p><b>‡∏à‡πà‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡∏≤‡∏ä‡∏ô‡∏∞: </b>${numeral(ThaiChanaSumM+ThaiChanaSumA).format('0,0')} ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏ä‡πâ‡∏≤: ${numeral(ThaiChanaSumM).format('0,0')} ‡∏ö‡∏≤‡∏ó) (‡πÄ‡∏¢‡πá‡∏ô: ${numeral(ThaiChanaSumA).format('0,0')} ‡∏ö‡∏≤‡∏ó)</p>
<p><b>‡∏à‡πà‡∏≤‡∏¢‡πÇ‡∏î‡∏¢ G-Wallet: </b>${numeral(GWalletSumM+GWalletSumA).format('0,0')} ‡∏ö‡∏≤‡∏ó (‡πÄ‡∏ä‡πâ‡∏≤: ${numeral(GWalletSumM).format('0,0')} ‡∏ö‡∏≤‡∏ó) (‡πÄ‡∏¢‡πá‡∏ô: ${numeral(GWalletSumA).format('0,0')} ‡∏ö‡∏≤‡∏ó)</p>

  <p><b>‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å: </b>${numeral(room.quantity).format('0,0')} ‡∏´‡πâ‡∏≠‡∏á | ‡∏£‡∏ß‡∏°‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤ : ${numeral(room.total).format('0,0')} ‡∏ö‡∏≤‡∏ó</p>
  <p><b>‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î: </b>${numeral(total_discount).format('0,0')} ‡∏ö‡∏≤‡∏ó</p>
  <p><b>‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: </b>${numeral(total_refund).format('0,0')} ‡∏ö‡∏≤‡∏ó</p>
  <p><b>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å: </b>${numeral(totalQuantityCancel).format('0,0')} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
                <br/>
    <table><thead><tr>
<th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
<th>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th>
<th>‡πÇ‡∏ï‡πä‡∏∞</th>
<th>‡πÇ‡∏î‡∏¢</th>
<th>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</th>
<th>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°</th>
</tr></thead><tbody>
`;
    cancelOrders.forEach(x => {
        output += `<tr>
    <td>${x.quantity}</td>
<td>${x.name}</td>
<td>${x.table_number}</td>
<td>${x.short_name}</td>
<td>${x.detail}</td>
<td>${numeral(x.price * x.quantity).format('0,0')}</td>
</tr>`;
    })

    output += `</tbody></table>`;

    output += `<br/>
    <table><thead><tr>
<th>ID</th>
<th>‡πÇ‡∏ï‡πä‡∏∞</th>
<th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</th>
<th>‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏î‡∏¢</th>
<th>‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î</th>
<th>‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞</th>
<th>‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á</th>
<th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</th>
<th>‡∏£‡∏≠‡∏ö</th>
</tr></thead><tbody>`;


    tablesSummary.forEach(x => {
        output += `<tr>
    <td>${x.id}</td>
<td>${x.number}</td>
<td>${x.outlet}</td>
<td>${x.method}</td>
<td>${numeral(x.discount_amount).format('0,0')}</td>
<td>${numeral(x.total_amount).format('0,0')}</td>
<td>${x.room_number}</td>
<td>${x.number_of_guest}</td>
<td>${x.period}</td>
</tr>`;
    })

    output += `</tbody></table>`;
  let transporter = nodemailer.createTransport({
          service: 'gmail',
          auth: {
              user: 'triple.t.server@gmail.com', // generated ethereal user
              pass: 'mytripletservergmail' // generated ethereal password
          }
      });

      let email_list = ['jboiedition@gmail.com', 'ac@samedpavilionresort.com', 'avaacc@samedpavilionresort.com', 'jepjep146@hotmail.com'];

      // send mail with defined transport object
      let info = await transporter.sendMail({
          from: '"Triple T Reporter üëª" <triple.t.server@gmail.com>', // sender address
          to: email_list, // list of receivers
          subject: `Report ‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏à‡∏µ‡πä‡∏¢‡∏ö ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${moment().format('DD/MM/YYY')}`, // Subject line
          text: '', // plain text body
          html: output // html body
      });
}

module.exports = {
  emailDailyShifts
}
